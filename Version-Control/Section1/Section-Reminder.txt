# 버전 관리 시스템

버전 관리 시스템에는 Subversion, Perforce, AWS Code Commit, Mercurial, Git 등 다양한 시스템이 있다.

크게 중앙집중식 버전 관리 시스템(CVCS)과 분산 버전 관리 시스템(DVCS)으로 나뉜다.

CVCS는 서버 / 클라이언트로 구성되어 있고 클라이언트는 서버에서 파일을 받아서 작업하고, 서버에 파일을 업로드한다.
CVCS는 러닝커브가 낮고, 사용하기 쉽다는 장점이 있지만 서버에 의존적이기 때문에 서버에 문제가 생기면 작업이 불가능하다.

DVCS는 서버 / 클라이언트로 구성되어 있지만, 클라이언트가 서버의 저장소를 복제하여 자체 저장소를 가지고 있어 독립적으로 작업할 수 있다.
DVCS는 오프라인 상태에서도 작업 가능하기에 속도 및 성능 면에서 CVCS보다 우월하다.


# 스테이징 / 출시

개발 팀은 새로운 기능이나 변경 사항을 출시하기 전에 코드가 문제나 버그를 일으키지 않을 것임을 확인해야 한다.

이를 위해 코드는 개발자 환경, UAT 또는 QA 환경, 그리고 스테이징 환경 등에서 테스트되어야 한다.

스테이징 환경은 실제 운영 환경과 유사한 환경으로, 실제 운영 환경에서 발생할 수 있는 문제를 사전에 확인할 수 있다.