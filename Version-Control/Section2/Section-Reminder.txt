# 몰랐던 파이프 명령어 정리

1. cat file1.txt 명령어로 'file1.txt' 파일의 내용을 볼 수 있다.

2. wc -w file1.txt 명령어로 이 파일에 단어가 몇 개 있는지 확인할 수 있다.

3. 파이프(`|`)를 사용하면 한 명령어의 출력을 다른 명령어의 입력으로 전달할 수 있다.

 예를 들어, `cat file1.txt | wc -w` 명령어를 사용하면 'file1.txt' 파일의 단어 수를 바로 알 수 있다.
또, `cat file1.txt file2.txt | wc -w` 처럼 여러 파일의 내용을 연결해서 전체 단어 수를 한 번에 확인할 수도 있다.

# 리눅스 리다이렉션

리눅스에서  리다이렉션은 입력과 출력의 기본 경로를 바꿀 수 있는 방법이다. 

보통 리눅스 명령어는 입력을 받아서 출력을 내는 구조인데, 리다이렉션을 통해서 이 입력과 출력의 경로를 바꿀 수 있다.

- **표준 입력 (0)**: 키보드에서 입력받는 데이터를 의미한다. 

    예를 들어, `cat > input.txt` 명령을 사용하면 키보드 입력을 'input.txt' 파일에 저장할 수 있어.

- **표준 출력 (1)**: 명령어의 결과를 화면에 출력하지 않고 파일 등 다른 곳으로 보내고 싶을 때 사용한다.

    예를 들어, `ls -l > output.txt` 명령은 디렉토리 리스트를 'output.txt' 파일에 저장해.

- **표준 에러 (2)**: 에러 메시지를 별도의 파일로 리다이렉션하고 싶을 때 사용한다.
    
    `ls -l /bin/usr 2> error.txt` 처럼 존재하지 않는 디렉토리를 조회하려 할 때 에러 메시지를 'error.txt'에 저장할 수 있다.

### 명령어 사용 예시
1. **표준 입력 저장하기**: `cat > input.txt` 명령을 사용하고 텍스트를 입력한 뒤, Ctrl+D로 종료하면 입력한 내용이 'input.txt'에 저장된다.
2. **표준 출력 리다이렉션**: `ls -l > output.txt` 명령으로 현재 디렉토리의 리스트를 'output.txt'에 저장한다.
3. **에러 출력 리다이렉션**: `ls -l /bin/usr 2> error.txt`를 실행하면, 에러 메시지만 'error.txt'에 저장한다.

### 복합 리다이렉션
- **표준 출력과 에러를 함께 저장**: `ls -l /bin/ > error_output.txt 2>&1` 명령을 사용하면, 
    정상적인 출력과 에러 메시지를 'error_output.txt'에 동시에 저장할 수 있다.

# Grep

grep은 "global regular expression print"의 약자로, 파일이나 폴더 내용을 검색할 때 사용한다.

### grep의 기본 사용법
- **기본 검색**: `grep Sam names.txt` 명령을 사용하면 'names.txt' 파일에서 'Sam'으로 시작하는 이름들을 찾는다.
    이 때 'Sam'과 정확히 일치하는 대소문자를 가진 결과만 보여준다.

- **대소문자 구분 없이 검색**: 대소문자를 구분하지 않고 싶다면 `-i` 옵션을 사용한다.
    예를 들어, `grep -i sam names.txt` 명령은 'sam', 'Sam', 'sAm' 등등을 모두 찾아준다.

### 다양한 검색 옵션
- **정확한 단어 검색**: `-w` 옵션을 사용하면, 입력한 키워드를 정확히 포함하는 단어만 찾는다.
    `grep -w Sam names.txt`는 'Sam'이라는 단어만 정확히 일치하는 경우를 결과로 보여줘.
- **파이프 사용하기**: 여러 명령어의 결과를 연결해서 사용할 수 있다.
    예를 들어, `/bin` 디렉토리에 있는 실행 가능한 파일들 중에서 'zip'이라는 단어가 포함된 파일을 찾고 싶다면, 
    `ls /bin | grep zip` 명령을 사용한다. 이렇게 하면 '/bin' 디렉토리의 결과 중에서 'zip'을 포함하는 항목만 필터링해서 보여준다.

### 실제 활용 예
예를 들어, `names.txt` 파일 안에서 'Sam'으로 시작하거나 포함하는 모든 이름을 찾고 싶다면, 다음과 같이 명령을 실행한다.
1. 대소문자 구분 없이 'Sam'을 찾기: `grep -i sam names.txt`
2. 정확한 단어 'Sam'만 찾기: `grep -w Sam names.txt`
3. `/bin` 디렉토리에서 'zip' 포함 파일 검색: `ls /bin | grep zip`

이처럼 `grep`을 활용하면 파일 내에서 원하는 텍스트를 효율적으로 검색하고 필터링할 수 있다. 